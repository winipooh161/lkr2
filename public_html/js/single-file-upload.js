/**
 * –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ –ø—Ä–æ–µ–∫—Ç–∞—Ö
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É —Å –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏ –∏ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–æ–∫
 */

console.log('=== SINGLE FILE UPLOAD SCRIPT LOADING ===');
console.log('Script URL:', document.currentScript ? document.currentScript.src : 'unknown');
console.log('Page URL:', window.location.href);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ Axios –≥–ª–æ–±–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –Ω–µ—Ç - –∑–∞–≥—Ä—É–∂–∞–µ–º
if (typeof axios === 'undefined') {
    console.log('Axios not found, loading from CDN');
    const script = document.createElement('script');
    script.src = 'https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js';
    script.async = true;
    script.onload = function() {
        console.log('Axios successfully loaded from CDN');
    };
    document.head.appendChild(script);
} else {
    console.log('Axios is already available globally');
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
window.fileUploadHandlers = window.fileUploadHandlers || {
    initialized: false,
    handledButtons: new Set(),
    activeUploads: new Set()
};

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
if (window.fileUploadHandlersScriptLoaded) {
    console.warn('DUPLICATE SCRIPT LOAD DETECTED - Already loaded');
} else {
    window.fileUploadHandlersScriptLoaded = true;

document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é
    if (window.fileUploadHandlers.initialized) {
        console.log('File upload handlers already initialized, skipping');
        return;
    }
    
    console.log('Initializing single file upload handler');
    window.fileUploadHandlers.initialized = true;
    
    // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    const uploadModals = [
        'uploadDesignModal', 
        'uploadSchemeModal', 
        'uploadDocumentModal', 
        'uploadContractModal', 
        'uploadOtherModal'
    ];
    
    // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å —Ñ–æ—Ä–º –≤ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    uploadModals.forEach(function(modalId) {
        const modal = document.getElementById(modalId);
        if (!modal) return;
        
        const form = modal.querySelector('form');
        if (!form) return;
        
        console.log('Setting up form visibility for modal:', modalId);
        
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å d-none —Å —Ñ–æ—Ä–º—ã
        form.classList.remove('d-none');
        form.style.display = 'block';
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
        const buttons = modal.querySelectorAll('button');
        buttons.forEach(btn => {
            btn.disabled = false;
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    document.querySelectorAll('.modal').forEach(function(modal) {
        modal.addEventListener('shown.bs.modal', function() {
            console.log('Modal shown:', modal.id);
            
            const form = modal.querySelector('form');
            if (!form) return;
            
            // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å d-none –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º display: block
            form.classList.remove('d-none');
            form.style.display = 'block';
            
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
            const progressContainer = modal.querySelector('.upload-progress');
            if (progressContainer) {
                progressContainer.classList.add('d-none');
                progressContainer.style.display = 'none';
            }
            
            // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏
            const buttons = modal.querySelectorAll('button');
            buttons.forEach(btn => {
                btn.disabled = false;
            });
        });
    });
    
    // –ï–î–ò–ù–°–¢–í–ï–ù–ù–´–ô –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
    console.log('üîç Searching for upload buttons...');
    const uploadButtons = document.querySelectorAll('.upload-file-btn');
    console.log('üìä Found ' + uploadButtons.length + ' upload buttons:', uploadButtons);
    
    uploadButtons.forEach((button, index) => {
        console.log(`üîò Processing button ${index + 1}:`, button);
        
        // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–Ω–æ–ø–∫–∏
        const buttonId = button.id || 'upload_btn_' + Math.random().toString(36).substr(2, 9);
        if (!button.id) {
            button.id = buttonId;
            console.log('üè∑Ô∏è Assigned new ID to button:', buttonId);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —ç—Ç–æ–π –∫–Ω–æ–ø–∫–∏
        if (window.fileUploadHandlers.handledButtons.has(buttonId)) {
            console.log('‚è≠Ô∏è Button already has handler, skipping:', buttonId);
            return;
        }
        
        // –û—Ç–º–µ—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é
        window.fileUploadHandlers.handledButtons.add(buttonId);
        console.log('‚úÖ Adding upload handler to button:', buttonId);
          button.addEventListener('click', function(e) {
            handleUploadButtonClick.call(this, e, buttonId);
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö –∫–Ω–æ–ø–æ–∫ (–ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ –≤–∫–ª–∞–¥–æ–∫)
    function initializeUploadButtons() {
        console.log('üîÑ Re-initializing upload buttons...');
        const uploadButtons = document.querySelectorAll('.upload-file-btn');
        console.log('üìä Found ' + uploadButtons.length + ' upload buttons for re-initialization');
        
        uploadButtons.forEach((button, index) => {
            const buttonId = button.id || 'upload_btn_' + Math.random().toString(36).substr(2, 9);
            if (!button.id) button.id = buttonId;
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            if (window.fileUploadHandlers.handledButtons.has(buttonId)) {
                return;
            }
            
            // –û—Ç–º–µ—á–∞–µ–º –∫–Ω–æ–ø–∫—É –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é
            window.fileUploadHandlers.handledButtons.add(buttonId);
            console.log('‚úÖ Adding handler to dynamic button:', buttonId);
            
            button.addEventListener('click', function(e) {
                console.log('=== DYNAMIC UPLOAD BUTTON CLICKED ===');
                console.log('Button ID:', buttonId);
                handleUploadButtonClick.call(this, e, buttonId);
            });
        });
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–≥—Ä—É–∑–∫–∏
    function handleUploadButtonClick(e, buttonId) {
        console.log('=== UPLOAD BUTTON CLICKED ===');
        console.log('Button ID:', buttonId);
        console.log('Button element:', this);
        console.log('Event details:', e);
        e.preventDefault();
        e.stopPropagation();
        
        // –ù–∞—Ö–æ–¥–∏–º –±–ª–∏–∂–∞–π—à—É—é –º–æ–¥–∞–ª–∫—É –∏ —Ñ–æ—Ä–º—É –≤–Ω—É—Ç—Ä–∏ –Ω–µ—ë
        const uploadButton = this;
        const modal = uploadButton.closest('.modal');
        const form = modal.querySelector('form');
        
        if (!form) {
            console.error('–§–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤–Ω—É—Ç—Ä–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞');
            alert('–û—à–∏–±–∫–∞: —Ñ–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ');
            return;
        }
        
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å d-none —É —Ñ–æ—Ä–º—ã, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
        form.classList.remove('d-none');
        form.style.display = 'block';
        
        const formData = new FormData(form);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.log('Form action:', form.action);
        console.log('Form method:', form.method);
        for (let [key, value] of formData.entries()) {
            console.log('Form data:', key, value instanceof File ? value.name : value);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω –ª–∏ —Ñ–∞–π–ª
        const fileInput = form.querySelector('input[type="file"]');
        if (!fileInput || !fileInput.files || fileInput.files.length === 0) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
            return;
        }
        
        // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –¥–ª—è —ç—Ç–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
        const uploadKey = form.action + '_' + fileInput.files[0].name + '_' + fileInput.files[0].size;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∏–¥–µ—Ç –ª–∏ —É–∂–µ –∑–∞–≥—Ä—É–∑–∫–∞ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞
        if (window.fileUploadHandlers.activeUploads.has(uploadKey)) {
            console.warn('–ó–∞–≥—Ä—É–∑–∫–∞ —ç—Ç–æ–≥–æ —Ñ–∞–π–ª–∞ —É–∂–µ –∏–¥–µ—Ç, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å');
            return;
        }
        
        // –û—Ç–º–µ—á–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—É—é
        window.fileUploadHandlers.activeUploads.add(uploadKey);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –ª–æ–∞–¥–µ—Ä
        if (window.GlobalUploadLoader) {
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞ –∏–∑ ID –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            let fileType = 'other'; // –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            if (modal.id.includes('Design')) fileType = 'design';
            else if (modal.id.includes('Scheme')) fileType = 'scheme';
            else if (modal.id.includes('Document')) fileType = 'document';
            else if (modal.id.includes('Contract')) fileType = 'contract';
            else if (modal.id.includes('Other')) fileType = 'other';
            
            console.log('Showing global loader for file type:', fileType, 'modal ID:', modal.id);
            window.GlobalUploadLoader.show(fileInput.files[0].name, fileType);
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å axios
        const axiosAvailable = typeof axios !== 'undefined';
        console.log('Axios available:', axiosAvailable);
        
        // –ï—Å–ª–∏ axios –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
        if (!axiosAvailable) {
            console.warn('Axios –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º');
            if (window.GlobalUploadLoader) {
                window.GlobalUploadLoader.hide();
            }
            form.submit();
            return;
        }
        
        const progressContainer = modal.querySelector('.upload-progress');
        
        // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º
        if (!progressContainer) {
            console.warn('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º');
            if (window.GlobalUploadLoader) {
                window.GlobalUploadLoader.hide();
            }
            form.submit();
            return;
        }
        
        const progressBar = progressContainer.querySelector('.progress-bar');
        const progressInfo = progressContainer.querySelector('.progress-info');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏
        form.style.display = 'none'; 
        progressContainer.classList.remove('d-none');
        progressContainer.style.display = 'block';
        progressBar.style.width = '0%';
        progressInfo.textContent = '–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –∑–∞–≥—Ä—É–∑–∫–µ...';
        
        // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
        const buttons = modal.querySelectorAll('button');
        buttons.forEach(btn => btn.disabled = true);
        
        // –í—ã–ø–æ–ª–Ω—è–µ–º AJAX –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞
        axios.post(form.action, formData, {
            headers: {
                'Content-Type': 'multipart/form-data',
                'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
            },
            onUploadProgress: function(progressEvent) {
                const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);
                progressBar.style.width = percentCompleted + '%';
                progressInfo.textContent = `–ó–∞–≥—Ä—É–∑–∫–∞: ${percentCompleted}%`;
                
                // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ª–æ–∞–¥–µ—Ä–µ
                if (window.GlobalUploadLoader) {
                    window.GlobalUploadLoader.updateProgress(percentCompleted);
                }
            }
        })
        .then(function(response) {
            console.log('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response.data);
            
            // –£–¥–∞–ª—è–µ–º –∫–ª—é—á –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö
            window.fileUploadHandlers.activeUploads.delete(uploadKey);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—Ö –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ª–æ–∞–¥–µ—Ä–µ
            if (window.GlobalUploadLoader) {
                window.GlobalUploadLoader.showSuccess('–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!');
            }
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É
            progressBar.classList.remove('progress-bar-animated');
            progressBar.classList.remove('progress-bar-striped');
            progressBar.classList.add('bg-success');
            progressInfo.textContent = '–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!';
            
            // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤–∫–ª–∞–¥–∫–µ
            setTimeout(function() {
                window.location.reload();
            }, 1000);
        })
        .catch(function(error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error);
            
            // –£–¥–∞–ª—è–µ–º –∫–ª—é—á –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö
            window.fileUploadHandlers.activeUploads.delete(uploadKey);
            
            let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞';
            
            // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫—É
            progressBar.classList.remove('progress-bar-animated');
            progressBar.classList.remove('progress-bar-striped');
            progressBar.classList.add('bg-danger');
            
            if (error.response) {
                console.error('–û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error.response.data);
                console.error('–°—Ç–∞—Ç—É—Å HTTP:', error.response.status);
                
                if (error.response.data.errors) {
                    // –í—ã–≤–æ–¥ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
                    const errorMessages = Object.values(error.response.data.errors).flat().join(', ');
                    errorMessage = '–û—à–∏–±–∫–∞: ' + errorMessages;
                    progressInfo.textContent = errorMessage;
                } else if (error.response.data.error) {
                    errorMessage = '–û—à–∏–±–∫–∞: ' + error.response.data.error;
                    progressInfo.textContent = errorMessage;
                } else if (error.response.data.message) {
                    errorMessage = '–û—à–∏–±–∫–∞: ' + error.response.data.message;
                    progressInfo.textContent = errorMessage;
                } else {
                    errorMessage = `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${error.response.status}`;
                    progressInfo.textContent = errorMessage;
                }
            } else if (error.request) {
                console.error('–ó–∞–ø—Ä–æ—Å –±—ã–ª —Å–¥–µ–ª–∞–Ω, –Ω–æ –Ω–µ—Ç –æ—Ç–≤–µ—Ç–∞', error.request);
                errorMessage = '–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.';
                progressInfo.textContent = errorMessage;
            } else {
                console.error('–û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–æ—Å–∞', error.message);
                errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: ' + error.message;
                progressInfo.textContent = errorMessage;
            }
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–º –ª–æ–∞–¥–µ—Ä–µ
            if (window.GlobalUploadLoader) {
                window.GlobalUploadLoader.showError(errorMessage);
            }
            
            // –í–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫–∏
            buttons.forEach(btn => btn.disabled = false);
            
            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–æ—Ä–º—É —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(function() {
                progressContainer.classList.add('d-none');
                progressContainer.style.display = 'none';
                form.style.display = 'block';
                form.classList.remove('d-none');
            }, 3000);
        });
    }
    
    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –≤–∫–ª–∞–¥–æ–∫
    document.addEventListener('shown.bs.tab', function(e) {
        console.log('üîÑ Tab switched, re-initializing upload buttons');
        setTimeout(initializeUploadButtons, 100);
        setTimeout(initializeDeleteButtons, 100); // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
    });
    
    // –°–ª—É—à–∞–µ–º —Å–æ–±—ã—Ç–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    document.addEventListener('shown.bs.modal', function(e) {
        console.log('üîÑ Modal shown, re-initializing upload buttons');
        setTimeout(initializeUploadButtons, 100);
        setTimeout(initializeDeleteButtons, 100); // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
    function initializeDeleteButtons() {
        console.log('üóëÔ∏è Initializing delete buttons...');
        const deleteButtons = document.querySelectorAll('.delete-file');
        console.log('üìä Found ' + deleteButtons.length + ' delete buttons');
        
        deleteButtons.forEach((button, index) => {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –ª–∏ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
            if (button.hasAttribute('data-delete-handler-added')) {
                return;
            }
            
            // –û—Ç–º–µ—á–∞–µ–º, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω
            button.setAttribute('data-delete-handler-added', 'true');
            console.log(`‚úÖ Adding delete handler to button ${index + 1}`);
            
            button.addEventListener('click', function(e) {
                e.preventDefault();
                e.stopPropagation();
                
                console.log('üóëÔ∏è Delete button clicked');
                
                if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ñ–∞–π–ª? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å.')) {
                    return;
                }
                
                const fileId = this.getAttribute('data-file-id');
                const projectId = this.getAttribute('data-project-id');
                const fileItem = this.closest('.file-item');
                
                console.log('Deleting file:', {fileId, projectId});
                
                if (!fileId || !projectId) {
                    console.error('Missing file ID or project ID');
                    alert('–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–µ—Ç—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–∞–π–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
                    return;
                }
                
                // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∫–ª–∏–∫–∏
                this.disabled = true;
                this.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>–£–¥–∞–ª–µ–Ω–∏–µ...';
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å axios
                if (typeof axios === 'undefined') {
                    console.error('Axios –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞');
                    alert('–û—à–∏–±–∫–∞: –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç axios)');
                    this.disabled = false;
                    this.innerHTML = '<i class="fas fa-trash me-1"></i>–£–¥–∞–ª–∏—Ç—å';
                    return;
                }
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ä–æ—É—Ç
                const deleteUrl = `/partner/projects/${projectId}/files/${fileId}`;
                console.log('DELETE URL:', deleteUrl);
                
                axios.delete(deleteUrl, {
                    headers: {
                        'X-CSRF-TOKEN': document.querySelector('meta[name="csrf-token"]').content
                    }
                })
                .then(function(response) {
                    console.log('‚úÖ File deleted successfully:', response.data);
                    
                    // –ê–Ω–∏–º–∞—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞
                    if (fileItem) {
                        fileItem.style.opacity = '0';
                        fileItem.style.transform = 'scale(0.8)';
                        fileItem.style.transition = 'all 0.3s ease';
                        
                        setTimeout(() => {
                            fileItem.remove();
                            
                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Å—Ç–∞–ª–∏—Å—å –ª–∏ —Ñ–∞–π–ª—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
                            const filesContainer = document.querySelector('.files-container');
                            if (filesContainer && filesContainer.children.length === 0) {
                                // –ï—Å–ª–∏ —Ñ–∞–π–ª–æ–≤ –±–æ–ª—å—à–µ –Ω–µ—Ç, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—É—Å—Ç–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                                window.location.reload();
                            }
                        }, 300);
                    }
                })
                .catch(function(error) {
                    console.error('‚ùå Error deleting file:', error);
                    
                    let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞';
                    if (error.response) {
                        console.error('Server response:', error.response.data);
                        console.error('HTTP status:', error.response.status);
                        
                        if (error.response.data.message) {
                            errorMessage = error.response.data.message;
                        } else if (error.response.status === 404) {
                            errorMessage = '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω';
                        } else if (error.response.status === 403) {
                            errorMessage = '–ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞';
                        } else {
                            errorMessage = `–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: ${error.response.status}`;
                        }
                    } else if (error.request) {
                        console.error('No response received:', error.request);
                        errorMessage = '–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.';
                    }
                    
                    alert(errorMessage);
                    
                    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
                    this.disabled = false;
                    this.innerHTML = '<i class="fas fa-trash me-1"></i>–£–¥–∞–ª–∏—Ç—å';
                }.bind(this));
            });
        });
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    initializeDeleteButtons();
    
    console.log('‚úÖ Single file upload handler initialization completed');
});

} // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–ª–æ–∫ if (window.fileUploadHandlersScriptLoaded)