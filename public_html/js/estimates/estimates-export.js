/**
 * –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–∫—Å–ø–æ—Ä—Ç–æ–º —Å–º–µ—Ç
 * –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–ø—ã—Ç –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ
 */

class EstimateExportManager {
    constructor() {
        this.init();
    }

    init() {
        this.bindEvents();
        this.initTooltips();
        console.log('‚úÖ EstimateExportManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    bindEvents() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞
        document.addEventListener('click', (e) => {
            if (e.target.closest('[href*="export"]')) {
                this.handleExportClick(e);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –∫–Ω–æ–ø–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞
        document.addEventListener('click', (e) => {
            if (e.target.closest('.export-quick-btn')) {
                this.handleQuickExportClick(e);
            }
        });
    }

    handleExportClick(e) {
        const link = e.target.closest('a');
        if (!link) return;

        const url = link.href;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        this.showExportProgress();
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∑–∞–≥—Ä—É–∑–∫–∏ –∫ –∫–Ω–æ–ø–∫–µ
        link.classList.add('export-loading');
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —ç–∫—Å–ø–æ—Ä—Ç–∞
        const exportType = this.getExportType(url);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification(`–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —ç–∫—Å–ø–æ—Ä—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ ${exportType}...`, 'info');
        
        // –£–±–∏—Ä–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
        setTimeout(() => {
            this.hideExportProgress();
            link.classList.remove('export-loading');
            this.showNotification(`–≠–∫—Å–ø–æ—Ä—Ç ${exportType} –∑–∞–≤–µ—Ä—à–µ–Ω!`, 'success');
        }, 2000);
    }

    handleQuickExportClick(e) {
        const btn = e.target.closest('.export-quick-btn');
        if (!btn) return;

        // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç –Ω–∞–∂–∞—Ç–∏—è
        btn.style.transform = 'scale(0.95)';
        setTimeout(() => {
            btn.style.transform = '';
        }, 150);
    }

    getExportType(url) {
        if (url.includes('export-pdf')) return 'PDF';
        if (url.includes('export')) return 'Excel';
        return '—Ñ–∞–π–ª–∞';
    }

    showExportProgress() {
        let progressBar = document.querySelector('.export-progress');
        if (!progressBar) {
            progressBar = this.createProgressBar();
            document.body.appendChild(progressBar);
        }
        progressBar.classList.add('show');
    }

    hideExportProgress() {
        const progressBar = document.querySelector('.export-progress');
        if (progressBar) {
            progressBar.classList.remove('show');
        }
    }

    createProgressBar() {
        const progressContainer = document.createElement('div');
        progressContainer.className = 'export-progress';
        progressContainer.innerHTML = `
            <div class="progress">
                <div class="progress-bar progress-bar-striped progress-bar-animated" 
                     role="progressbar" style="width: 100%"></div>
            </div>
        `;
        return progressContainer;
    }

    showNotification(message, type = 'info') {
        let notificationContainer = document.querySelector('.export-notification');
        if (!notificationContainer) {
            notificationContainer = document.createElement('div');
            notificationContainer.className = 'export-notification';
            document.body.appendChild(notificationContainer);
        }

        const alertClass = type === 'success' ? 'alert-success' : 
                          type === 'error' ? 'alert-danger' : 'alert-info';
        
        const notification = document.createElement('div');
        notification.className = `alert ${alertClass} alert-dismissible fade show`;
        notification.innerHTML = `
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        `;

        notificationContainer.appendChild(notification);

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏—Ä–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            if (notification.parentNode) {
                notification.remove();
            }
        }, 5000);
    }

    initTooltips() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º tooltips –¥–ª—è –∫–Ω–æ–ø–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞, –µ—Å–ª–∏ Bootstrap –∑–∞–≥—Ä—É–∂–µ–Ω
        if (typeof bootstrap !== 'undefined') {
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        }
    }

    // –ú–µ—Ç–æ–¥—ã –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (–¥–ª—è –±—É–¥—É—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
    enableBulkActions() {
        const bulkContainer = document.querySelector('.bulk-actions');
        if (bulkContainer) {
            bulkContainer.classList.add('show');
        }
    }

    disableBulkActions() {
        const bulkContainer = document.querySelector('.bulk-actions');
        if (bulkContainer) {
            bulkContainer.classList.remove('show');
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Å–º–µ—Ç
    exportSelected(format = 'excel') {
        const selectedItems = document.querySelectorAll('.estimate-checkbox:checked');
        if (selectedItems.length === 0) {
            this.showNotification('–í—ã–±–µ—Ä–∏—Ç–µ —Å–º–µ—Ç—ã –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞', 'error');
            return;
        }

        const estimateIds = Array.from(selectedItems).map(cb => cb.value);
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞
        this.showNotification(`–≠–∫—Å–ø–æ—Ä—Ç ${estimateIds.length} —Å–º–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ ${format.toUpperCase()}...`, 'info');
    }
}

// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–∫—Å–ø–æ—Ä—Ç–æ–º
const ExportUtils = {
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
     */
    formatFileSize(bytes) {
        if (bytes === 0) return '0 –ë–∞–π—Ç';
        const k = 1024;
        const sizes = ['–ë–∞–π—Ç', '–ö–ë', '–ú–ë', '–ì–ë'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
    },

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∫–æ–Ω–∫–∏ –ø–æ —Ç–∏–ø—É —Ñ–∞–π–ª–∞
     */
    getFileIcon(type) {
        switch (type.toLowerCase()) {
            case 'excel':
            case 'xlsx':
                return 'fas fa-file-excel text-success';
            case 'pdf':
                return 'fas fa-file-pdf text-danger';
            default:
                return 'fas fa-file text-muted';
        }
    },

    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±—Ä–∞—É–∑–µ—Ä–æ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
     */
    supportsDownload() {
        const a = document.createElement('a');
        return typeof a.download !== 'undefined';
    },

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞
     */
    downloadFile(url, filename) {
        if (!this.supportsDownload()) {
            window.open(url, '_blank');
            return;
        }

        const a = document.createElement('a');
        a.href = url;
        a.download = filename;
        document.body.appendChild(a);
        a.click();
        document.body.removeChild(a);
    }
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–æ—Ä—Ç–∞
function testExportSystem() {
    console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —ç–∫—Å–ø–æ—Ä—Ç–∞ —Å–º–µ—Ç...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω—ã—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    const testEstimateId = 1; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID —Å–º–µ—Ç—ã
    
    const routes = [
        '/partner/estimates/' + testEstimateId + '/export',
        '/partner/estimates/' + testEstimateId + '/export-pdf',
        '/partner/estimates/' + testEstimateId + '/export-client',
        '/partner/estimates/' + testEstimateId + '/export-contractor',
        '/partner/estimates/' + testEstimateId + '/export-pdf-client',
        '/partner/estimates/' + testEstimateId + '/export-pdf-contractor'
    ];
    
    console.log('üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —ç–∫—Å–ø–æ—Ä—Ç–∞:');
    routes.forEach(route => {
        console.log(`  - ${route}`);
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞
    const exportButtons = document.querySelectorAll('[href*="export"]');
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${exportButtons.length} –∫–Ω–æ–ø–æ–∫ —ç–∫—Å–ø–æ—Ä—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ`);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É EstimateExportManager
    if (window.estimateExportManager) {
        console.log('‚úÖ EstimateExportManager –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
        
        // –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        window.estimateExportManager.showNotification('–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ', 'success');
        
        setTimeout(() => {
            window.estimateExportManager.showNotification('–°–∏—Å—Ç–µ–º–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!', 'info');
        }, 1000);
    } else {
        console.log('‚ùå EstimateExportManager –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
    }
    
    return {
        routes: routes,
        buttonsCount: exportButtons.length,
        managerReady: !!window.estimateExportManager
    };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
function createTestExportData() {
    console.log('üõ†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞...');
    
    // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è
    // —Ç–µ—Å—Ç–æ–≤–æ–π —Å–º–µ—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
    const testData = {
        estimate: {
            id: 999,
            name: '–¢–µ—Å—Ç–æ–≤–∞—è —Å–º–µ—Ç–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞',
            project: {
                address: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
                client_name: '–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç'
            }
        },
        jsonData: {
            type: 'main',
            version: '1.0',
            meta: {
                estimate_id: 999,
                estimate_name: '–¢–µ—Å—Ç–æ–≤–∞—è —Å–º–µ—Ç–∞ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞',
                created_at: new Date().toISOString(),
                updated_at: new Date().toISOString()
            },
            sheets: [{
                name: '–û—Å–Ω–æ–≤–Ω–æ–π',
                data: [
                    {
                        _type: 'header',
                        name: '–¢–µ—Å—Ç–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã'
                    },
                    {
                        number: '1',
                        name: '–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ 1',
                        unit: '—à—Ç',
                        quantity: 10,
                        price: 1000,
                        cost: 10000,
                        markup: 20,
                        discount: 0,
                        client_price: 1200,
                        client_cost: 12000
                    },
                    {
                        number: '2',
                        name: '–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞–±–æ—Ç–∞ 2',
                        unit: '–º¬≤',
                        quantity: 25,
                        price: 500,
                        cost: 12500,
                        markup: 15,
                        discount: 5,
                        client_price: 547.5,
                        client_cost: 13687.5
                    }
                ]
            }],
            totals: {
                work_total: 22500,
                materials_total: 0,
                grand_total: 22500,
                client_work_total: 25687.5,
                client_materials_total: 0,
                client_grand_total: 25687.5
            }
        }
    };
    
    console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã:', testData);
    return testData;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    window.estimateExportManager = new EstimateExportManager();
    window.ExportUtils = ExportUtils;
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.EstimateExportManager = EstimateExportManager;

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.testExportSystem = testExportSystem;
window.createTestExportData = createTestExportData;

console.log('üìÅ –ó–∞–≥—Ä—É–∂–µ–Ω –º–æ–¥—É–ª—å EstimateExportManager');
console.log('üß™ –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —ç–∫—Å–ø–æ—Ä—Ç–∞:');
console.log('  - testExportSystem() - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã');
console.log('  - createTestExportData() - —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö');
